[
  {
    "bookSourceComment": "\n支持所有漫画，小说，听书，短剧\n小说可下载，听书支持切换音色\n/*\n搜索模式默认是搜小说\n需要漫画则在关键字前加m:即m:系统\n听书则为t:系统 \n短剧则为d:系统\n使用该搜索方式后，需要登录自行切换至小说模式\n*/",
    "bookSourceName": "番茄四合一",
    "bookSourceType": 0,
    "bookSourceUrl": "https://bk.yydjtc.cn",
    "customOrder": 2,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\n个人中心 = 1;\n\nvar type = getArguments('type');\njs = (cid, genre_type, gender) => `@js:\nxGorgon(\n  \"new_category/landing\",\n  \"category_id=${cid}&gender=${gender}&genre_type=${genre_type}&offset=0&aid=1967&app_name=novelapp&channel=0&device_platform=android&os_version=0&version_code=69132&update_version_code=69132&manifest_version_code=69132&version_name=6.9.1.32&&device_type=Honor10&limit=100&page_version=1\"\n)`\n\ntt_rank_books = (url) => `@js:\n  let ck = \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source. getLoginInfoMap() || {})['手动登录Token'])\n  let list = JSON.parse(java.ajax('${url}')).data.result;\n  let book_ids = [];\n  for (let i of list) book_ids.push(i.book_id)\n  xGorgon(\n    \"multi-detail\",\n    \"book_id=\" + book_ids.slice(0, 100).join(','),\n    null,\n    ck,\n  )\n`\n\n\nfunction extractQueryParams(input) {\n  let genreType = '';\n  let gender = '';\n  const genreTypeMatch = input.match(/[?&]genreType=([^&]+)/);\n  if (genreTypeMatch && genreTypeMatch[1]) {\n    genreType = decodeURIComponent(genreTypeMatch[1]);\n  }\n  const genderMatch = input.match(/[?&]gender=([^&]+)/);\n  if (genderMatch && genderMatch[1]) {\n    gender = decodeURIComponent(genderMatch[1]);\n  }\n  return [genreType, gender];\n}\n\nobj = (title, url, type, type1) => ({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type\n  }\n})\n\n\nlet toutiao_rank_info = JSON.parse(java.ajax('https://novel.snssdk.com/api/novel/channel/homepage/rank/rank_list/v2/?need_type=1&offset=0&side_type=10&type=1&aid=1319') || '{\"data\":{\"type\":{\"type\":[]}}}').data.type.type\ntoutiao_rank = (index) => {\n  let rank_list = toutiao_rank_info[index] || []\n  let ret = []\n  if (rank_list) {\n    ret.push(obj(i.name + '榜', '', 1))\n    for (let j of rank_list.rank_list) {\n      ret.push(obj(j.name, 'https'))\n    }\n  }\n}\narr = []\njava.longToast(\"请稍等，发现列表正在热更新！\")\nlet index = [];\nif (type == 'comic') {\n  index = [5];\n} else if (type == 'audio') {\n  index = [3];\n} else if (type == 'video') {\n  index = [6];\n} else {\n  index = [0, 1, 2];\n}\nfor (let i of index) {\n  // java.toast(i)\n  let type = i\n  $ = JSON.parse(java.ajax(xGorgon(\n    \"new_category/front\",\n    `distinct_style=1&aid=1967&app_name=novelapp&channel=0&device_platform=android&os_version=0&version_code=69132&update_version_code=69132&manifest_version_code=69132&version_name=6.9.1.32&new_category_tab=${i}&device_type=Honor10`\n  ))).data.category_tab_data\n  cate = []\n  cate.push(obj(\n    \"====== \" + $.tab_name + \" ======\", \"\", 1\n  ))\n  $.cell_data.forEach((c) => {\n    let [genreType, gender] = extractQueryParams(c.atom_data[0].category_data.category_landpage_url);\n    cate.push(obj(\n      c.cell_name,\n      js(c.atom_data[0].category_data.category_id, genreType, gender),\n      1\n    ))\n    for (j = 2; j < 5; j++) {\n      c.atom_data.slice(1).forEach((a) => {\n        d = a.category_data\n        if (d.name.length == j) {\n        let \t[genreType2, gender2] = extractQueryParams(d.category_landpage_url)\n        cate.push(obj(d.name, js(d.category_id, genreType2, gender2), 0.25))\n        }\n      })\n    }\n  })\n  arr = cate.concat(arr)\n}\n\nget = (path) => `@js:\nlet ck = \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() || {})['手动登录Token'])\n\nlet v = xGorgon(\n    \"${path}\",\n    \"offset=\" + (page - 1) * 20,\n    null,\n    ck,\n)\n\nxGorgon(\n  \"multi-detail\",\n  \"book_id=\" + getBookId(java.ajax(v)),\n  null,\n  ck,\n)`\n\nlet book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\nlet book_shelf_info = JSON.parse(java.ajax(book_shelf_url + ', ' + JSON.stringify({\n  headers: {\n    'Cookie': \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() || {})['手动登录Token']),\n  }\n})))\n\njava.log(JSON.stringify(book_shelf_info))\n\nlet username\nif (book_shelf_info.code != 0) {\n  个人中心 = 0\n} else {\n  let uinfo = java.ajax(\"https://fanqienovel.com/api/user/info/v2,\" + JSON.stringify({ headers: { Cookie: \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() || {})['手动登录Token']) } }))\n  uinfo = JSON.parse(uinfo)\n  username = uinfo.data.name\n}\n\nlet gro = []\npush = (title, url, type) => gro.push({\n  title: title,\n  url: url,\n  style: {\n    layout_flexGrow: 1,\n    layout_flexBasisPercent: type\n  }\n});\n\nlet sArr = []\n\nif (个人中心) {\n  let groups_bookids = {\n    \"未分组\": []\n  }\n  book_shelf_info.data.book_shelf_info.forEach(i => {\n    if (!groups_bookids[i.group_name ? i.group_name : \"未分组\"]) groups_bookids[i.group_name] = []\n    groups_bookids[i.group_name ? i.group_name : \"未分组\"].push(i.book_id)\n  })\n\n  Object.keys(groups_bookids).forEach(k => {\n    var multi_detail_post_body = {\n      data: {\n        book_shelf_info: []\n      }\n    }\n    groups_bookids[k].forEach(i => multi_detail_post_body.data.book_shelf_info.push({ book_id: String(i), item_id: '0' }))\n    // var multi_detail_group_url = `https://fanqienovel.com/api/bookshelf/multidetail,${JSON.stringify(multi_detail_post_body)}`\n    // var book_ids = getBookId(JSON.stringify(multi_detail_post_body)).join(\",\")\n    push(k, \"https://fanqienovel.com/fqbookshelf/groupName/\" + k, 0.4)\n  })\n  if (Object.keys(groups_bookids).length % 2 != 0) push(\"占位\", \"\", 0.4)\n  // java.log(JSON.stringify(gro, null, 2))\n  sArr.push(obj(username + '的个人中心', '', 1))\n  sArr.push(obj('首页推荐', \"https://fanqienovel.com/tab/0\", 0.4))\n  sArr.push(obj('猜你喜欢', \"https://fanqienovel.com/tab/2\", 0.4))\n  // sArr.push(obj('猜你喜欢', \"https://fanqienovel.com/tab/1\", 0.4))\n  sArr.push(obj(\"我的书架\", \"https://fanqienovel.com/fqbookshelf\", 1))\n  \n  sArr = sArr.concat(gro)\n  // java.toast(JSON.stringify(sArr)) \n  sArr.push(obj(\"阅读历史\", get(\"read_history/list\"), 1))\n}\n\narr = sArr.concat(arr)\nJSON.stringify(arr)",
    "jsLib": "function splitArray(input, size) {\n  const output = []\n  for (let i = 0; i < input.length; i += size) {\n    output.push(input.slice(i, i + size))\n  }\n  return output\n}\nfunction write_config(key, value) {\n  if (Packages.android.text.TextUtils.isEmpty(this.source.getVariable())) {\n    this.source.setVariable('{}')\n  }\n  // this.java.log('var:' + this.source.getVariable())\n  let obj = JSON.parse(this.source.getVariable())\n  let arr = key.split('.')\n  let temp = obj\n\n  for (let i = 0; i < arr.length - 1; i++) {\n    let currentKey = arr[i]\n    if (!temp[currentKey]) {\n      temp[currentKey] = {}\n    }\n    temp = temp[currentKey]\n  }\n  temp[arr[arr.length - 1]] = value\n  this.source.setVariable(JSON.stringify(obj))\n}\nfunction read_config(key) {\n  if (Packages.android.text.TextUtils.isEmpty(this.source.getVariable())) {\n    this.source.setVariable('{}')\n  }\n  // this.java.log('var:' + this.source.getVariable())\n  let obj = JSON.parse(this.source.getVariable())\n  let arr = key.split('.')\n  let res = JSON.parse(JSON.stringify(obj))\n  for (let i = 0; i < arr.length; i++) {\n    res = res[arr[i]] || (i < (arr.length - 1) ? {} : undefined)\n    // this.java.log(JSON.stringify(res))\n  }\n  return res\n}\nfunction getBookId(url, page) {\n  const {java} = this\n  let $ = JSON.parse(url).data\n  let list\n  let arr\n  if ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n   arr = $.book_shelf_info.map($ => $.book_id)\n  } else if (let (list = $.data_list) list != 0 && $.data_list != undefined)  {\n    arr = $.data_list.map($ => $.book_id_str)\n  } else {\n    java.toast(\"获取 book_id 失败，你可能需要登录！\")\n  }\n  return arr.slice(page*100, (page+1)*100)\n}\n\ngetHost = (a, b, c, d) => [\n    [\"https://\"][0],\n    [\n        \"reading\",\n        \"api\",\n        \"api3\",\n        \"api5\",\n        \"novel\",\n        \"\",\n    ][(a == 4 ? 5 : b) || 0],\n    [\n        \"\",\n        \"-normal\",\n    ][c || 0],\n    [\n        \"\",\n        \"-hl\",\n        \"-lf\",\n        \"-lq\",\n        \"-sinfonlinea\",\n        \"-sinfonlineb\",\n        \"-sinfonlinec\",\n    ][d || 0],\n    [\".\", \"\"][a == 4 ? 1 : 0],\n    [\n        \"snssdk\",\n        \"fqnovel\",\n        \"fanqiesdk\",\n        \"toutiaoapi\",\n        \"fanqienovel\",\n    ][a || 0],\n    [\".com\"][0],\n].join(\"\");\njavaImport = new JavaImporter()\njavaImport.importPackage(\n    Packages.okhttp3,\n    Packages.cn.hutool.core.util,\n    Packages.cn.hutool.core.codec,\n    Packages.cn.hutool.crypto.digest\n)\nwith(javaImport) {\n    //POST请求\n    function post(url, body, map) {\n        let json = MediaType.parse(\"application/json\");\n        let request = new Request.Builder()\n            .url(url)\n            .post(RequestBody.create(body, json));\n        if (map) {\n            request.addHeader(\"Content-Encoding\", \"gzip\");\n            for (let n in map) {\n                request.addHeader(n, map[n]);\n            }\n        }\n        let client = new OkHttpClient();\n        let response = client.newCall(request.build()).execute();\n        return JSON.parse(response.body().string());\n    }\n\n    function okhttpGet(url, map) {\n        const { java } = this\n        let request = new Request.Builder()\n            .url(url)\n            .get();\n        if (map) {\n            request.addHeader(\"Content-Encoding\", \"gzip\");\n            for (let n in map) {\n                request.addHeader(n, map[n]);\n            }\n        }\n        java.log(\"okhttp: \" + url + \", headers=\" + JSON.stringify(map))\n        let client = new OkHttpClient();\n        let response = client.newCall(request.build()).execute();\n        return JSON.parse(response.body().string());\n    }\n    \n    function okhttpWithHeaders(url, map) {\n        const { java } = this\n        let request = new Request.Builder()\n            .url(url)\n            .get();\n        if (map) {\n            request.addHeader(\"Content-Encoding\", \"gzip\");\n            for (let n in map) {\n                request.addHeader(n, map[n]);\n            }\n        }\n        java.log(\"okhttp: \" + url + \", headers=\" + JSON.stringify(map))\n        let client = new OkHttpClient();\n        let response = client.newCall(request.build()).execute();\n        let headers = {}\n        let names = response.headers().names()\n        names.forEach((k) => {\n          headers[k] = response.headers().get(k)\n        })\n        return {\n          body: JSON.parse(response.body().string()),\n          headers: headers\n        }\n    }\n\n    //Base64编码\n    let b64En = (b64) => Base64.encode(b64);\n\n    //Base64解码\n    let b64De = (b64) => Base64.decode(b64);\n    \n    function gzip(data) { ZipUtil.gzip(data, \"\") }\n\n    //X-Gorgon参数\n    function xGorgon(path, params, data, ck) {\n        const {  java, source  } = this;\n        params = [\n            params,\n            \"aid=1967\",\n            \"channel=0\",\n            \"os_version=0\",\n            \"app_name=novelapp\",\n            \"version_code=58932\",\n            \"device_platform=android\",\n            \"device_type=unknown\",\n        ].join(\"&\").split(\"&\").sort().join(\"&\").replace(/^&+/, \"\");\n        if (!data) {\n            path = \"/reading/bookapi/\" + path + \"/v/?\";\n        }\n        let url = getHost() + path + params;\n        let devtype\n        for (let i of (source.getLoginHeader() || '').split('&')) {\n          // java.log(i)\n          if (i.startsWith('device_type')) {\n            // java.log(i)\n            devtype = i.split('=')[1]\n          }\n        }\n\n\n        //md5加密\n        let md5 = (str) => DigestUtil.md5Hex(str);\n\n        //反转字符串\n        let rStr = (str) => StrUtil.reverse(str);\n\n        //10转16进制\n        let Hex = (num) => num.toString(16).padStart(2, \"0\");\n\n        //反转16进制\n        let rHex = (num) => parseInt(rStr(Hex(num)), 16);\n\n        //反转2进制\n        function rBin(num) {\n            let bin = num.toString(2).padStart(8, \"0\");\n            return parseInt(rStr(bin), 2);\n        }\n\n        //运算\n        function getHex(ck) {\n            let hex = md5(params)\n            hex += data ? md5(data) : \"0\".repeat(8)\n            hex += ck ? md5(ck) : \"0\".repeat(8)\n            return hex\n        }\n\n        function calculate(hex, ck) {\n            let len = 0x14;\n            let key = [0xDF, 0x77, 0xB9, 0x40, 0xB9, 0x9B, 0x84, 0x83, 0xD1, 0xB9, 0xCB, 0xD1, 0xF7, 0xC2, 0xB9, 0x85, 0xC3, 0xD0, 0xFB, 0xC3];\n            let paramList = [];\n            for (let i = 0; i < 9; i += 4) {\n                let temp = hex.substring(8 * i, 8 * (i + 1));\n                for (let j = 0; j < 4; j++) {\n                    let h = parseInt(temp.substring(j * 2, (j + 1) * 2), 16);\n                    paramList.push(h);\n                }\n            }\n            paramList.push(0x0, 0x6, 0xB, 0x1C);\n            let T = Math.floor(Date.now() / 1000);\n            paramList.push((T >> 24) & 0xFF, (T >> 16) & 0xFF, (T >> 8) & 0xFF, T & 0xFF);\n            //异或\n            let eorResultList = []\n            for (let i = 0; i < paramList.length; i++) {\n                eorResultList.push(paramList[i] ^ key[i % len]);\n            }\n            for (let A, B, C, D, i = 0; i < len; i++) {\n                A = rHex(eorResultList[i]);\n                B = eorResultList[(i + 1) % len];\n                C = rBin(A ^ B);\n                D = ((C ^ 0xFFFFFFFF) ^ len) & 0xFF;\n                eorResultList[i] = D;\n            }\n            let result = \"\"\n            for (let param of eorResultList) {\n                result += Hex(param);\n            }\n            let option = {\n                \"headers\": {\n                    \"X-Khronos\": String(T),\n                    \"X-Gorgon\": \"0404b0d30000\" + result,\n                    \"User-Agent\": 'com.dragon.read',\n                    \"Cookie\": ck ? ck : \"\"\n                }\n            }\n            let b_ = option\n            b_[\"body\"] = String(data ? data : \"\")\n            java.log(url + \",\" + JSON.stringify(b_))\n            if (data) {\n                return post(url, data, option.headers).data;\n            } else {\n                return url + \",\" + JSON.stringify(option);\n            }\n        }\n       return  calculate(getHex(ck), ck);\n    }\n}\n\nfunction getBookId(url) {\n\tconst {java} = this\n\tlet $ = JSON.parse(url).data\n\tlet arr, list\n\tif ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n\t\tarr = $.book_shelf_info.map($ => $.book_id)\n\t} else if (list = $.data_list != 0 && $.data_list != undefined)  {\n\t\tarr = $.data_list.map($ => $.book_id_str)\n\t} else {\n\t\tjava.toast(\"获取 book_id 失败，你可能需要登录！\")\n\t}\n\treturn arr.slice(0, 100)\n}\n\nfunction getBookIdFull(url) {\n\tconst {java} = this\n\tlet $ = JSON.parse(url).data\n  let arr, list\n\tif ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n\t\tarr = $.book_shelf_info.map($ => $.book_id)\n\t} else if (list = $.data_list != 0 && $.data_list != undefined)  {\n\t\tarr = $.data_list.map($ => $.book_id_str)\n\t} else {\n\t\tjava.toast(\"获取 book_id 失败，你可能需要登录！\")\n\t}\n\treturn arr\n}\n\nfunction splitArray(input, size) {\n  const output = []\n  for (let i = 0; i < input.length; i += size) {\n    output.push(input.slice(i, i + size))\n  }\n  return output\n}\n\nlet replaceCover = (u) => {\n    if (u.includes(\"novel-pic-r\")) return u\n    if (u.startsWith(\"https://\")) u = u.substring(8)\n    else u = u.substring(7)\n    let uArr = u.split(\"/\")\n    uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n    let uArr2 = []\n    uArr.forEach((x) => {\n        if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n        else uArr2.push(x.split(\"~\")[0])\n    })\n    u = uArr2.join(\"/\")\n    return u\n}\n\nfunction getArguments(key) {\n\tconst { source } = this;\n\tlet open_argument = source.getVariable();\n  try {\n  \t\topen_argument = JSON.parse(open_argument);\n  } catch (e) {\n    open_argument = {\n      type: \"novel\",\n      tone_id: \"0\",\n    };\n  }\n  if (key) {\n    return open_argument[key];\n  } else {\n    return open_argument;\n  }\n}\n\nfunction setArguments(key, value) {\n\tconst { source } = this;\n\tlet open_argument = getArguments('');\n\topen_argument[key] = value;\n\topen_argument = JSON.stringify(open_argument);\n\tsource.setVariable(open_argument);\n\t}",
    "lastUpdateTime": 1760265716519,
    "loginUi": "[\n{\n        \"name\":  \"🍅番茄账号登录🍅\",\n        \"type\": \"button\",\n        \"action\": \"Y(true)\",\n        \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },{\n        \"name\":  \"🍅退出登录🍅\",\n        \"type\": \"button\",\n        \"action\": \"X()\",\n        \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.4\n    }\n  },\n{\n    'name': '当前模式',\n    'type': 'button',\n    \"action\": \"cx('type')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n},\n{\n        name: \"小说\",\n        type: \"button\",\n        action: \"configs('小说')\",\n    \t\t style: {\n    \t\t \tlayout_flexGrow: 1,\n    \t\t \tlayout_flexBasisPercent: 0.4\n    \t\t \t}\n},\n{\n        name: \"漫画\",\n        type: \"button\",\n        action: \"configs('漫画')\",\n    \t\t style: {\n    \t\t \tlayout_flexGrow: 1,\n    \t\t \tlayout_flexBasisPercent: 0.4\n    \t\t \t}\n},\n{\n        name: \"听书\",\n        type: \"button\",\n        action: \"configs('听书')\",\n    \t\t style: {\n    \t\t \tlayout_flexGrow: 1,\n    \t\t \tlayout_flexBasisPercent: 0.4\n    \t\t \t}\n},\n{\n        name: \"短剧\",\n        type: \"button\",\n        action: \"configs('短剧')\",\n    \t\t style: {\n    \t\t \tlayout_flexGrow: 1,\n    \t\t \tlayout_flexBasisPercent: 0.4\n    \t\t \t}\n},\n{\n    'name': '当前听书音色',\n    'type': 'button',\n    \"action\": \"cx('tone_id')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },{\n        \"name\": \"听书Ai音色填写详情页序号\",\n        \"type\": \"text\"\n      },\n  {\n    \"name\": \"多人对话\",\n    \"type\": \"button\",\n    \"action\": \"setTone('1')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"真人主播\",\n    \"type\": \"button\",\n    \"action\": \"setTone('2')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"甜美少女\",\n    \"type\": \"button\",\n    \"action\": \"setTone('3')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"清亮青叔\",\n    \"type\": \"button\",\n    \"action\": \"setTone('4')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"成熟大叔\",\n    \"type\": \"button\",\n    \"action\": \"setTone('5')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"开朗青年\",\n    \"type\": \"button\",\n    \"action\": \"setTone('6')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"温柔淑女\",\n    \"type\": \"button\",\n    \"action\": \"setTone('7')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"风雅青叔\",\n    \"type\": \"button\",\n    \"action\": \"setTone('8')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"清纯少女\",\n    \"type\": \"button\",\n    \"action\": \"setTone('9')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"磁性青叔\",\n    \"type\": \"button\",\n    \"action\": \"setTone('10')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"儒雅大叔\",\n    \"type\": \"button\",\n    \"action\": \"setTone('11')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"优雅御姐\",\n    \"type\": \"button\",\n    \"action\": \"setTone('12')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"斯文青叔\",\n    \"type\": \"button\",\n    \"action\": \"setTone('13')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"知性主播\",\n    \"type\": \"button\",\n    \"action\": \"setTone('14')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"成熟升级\",\n    \"type\": \"button\",\n    \"action\": \"setTone('15')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"多人升级\",\n    \"type\": \"button\",\n    \"action\": \"setTone('16')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"俏皮御姐\",\n    \"type\": \"button\",\n    \"action\": \"setTone('17')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"name\": \"双音灵动\",\n    \"type\": \"button\",\n    \"action\": \"setTone('18')\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  }\n]",
    "loginUrl": "function login(){}\nfunction login_(openBrowser, checkMode) {\n    // java.removeCookie(\"snssdk.com\")\n    var cookie_ = String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']\n    // java.toast(cookie_)\n    if (cookie_ && cookie_ != \"\" && !checkMode) {\n        if (!source.variableComment) {\n            java.toast(\"请不要重复登录，请先退出登录！\")\n        } else {\n            java.toast(\"您为填写token登录，请手动移除token后再次登录\")\n        }\n        return false\n    }\n    if (openBrowser) {\n        try {\n            java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n        } catch (e) {\n            java.toast(e)\n        }\n    }\n    // java.log(\"snssdk cookie: \" + java.getCookie(\"snssdk.com\") + \"will be reomved\")\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {}\n    // java.log(cookie)\n    var cookie_ = \"sessionid=\" + String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap())['手动登录Token']\n    let user\n    try {\n      user = JSON.parse(java.ajax(\"https://fanqienovel.com/api/user/info/v2,\" + JSON.stringify({\n        method: \"GET\",\n        headers: {\n          \"Cookie\": cookie_\n        }\n      }))).data.name\n     } catch (e) {java.log(e)}\n    if (!cookie_ || cookie_ == \"sessionid=\" || !user) {\n        java.toast(\"未获取到登录凭据，登录失败\")\n        return false\n    }\n    java.toast(\"欢迎 \" + user + \"\\n登录成功！\")\n    return true\n}\nfunction Y(a, b) {\n  try {\n    login_(a, b)\n  } catch (e) {\n    java.log(e+\"\\n\"+e.stack)\n  }\n}\nfunction X() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    if (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() ? source.getLoginInfoMap() : {})['手动登录Token']) java.toast(\"请手动移除填写的Token\")\n    else java.toast(\"退出登录成功\");\n}\n\nfunction getArguments(key) {\n\t\tlet open_argument = source.getVariable();\n  try {\n  \t\topen_argument = JSON.parse(open_argument);\n  } catch (e) {\n    open_argument = {\n      type: \"novel\",\n      tone_id: \"0\",\n    };\n  }\n  if (key) {\n    return open_argument[key];\n  } else {\n    return open_argument;\n  }\n}\n\nfunction setArguments(key, value) {\n\t\tlet open_argument = getArguments('');\n\topen_argument[key] = value;\n\topen_argument = JSON.stringify(open_argument);\n\tsource.setVariable(open_argument);\n\t}\n\nfunction cx(t) {\n\tvar type = getArguments('type');\nlet tone = getArguments('tone_id');\nlet syms = '小说';\nif (type=='video') {\n\tsyms = '短剧模式'\n\t} else if (type=='audio') {\n\tsyms = '听书模式'\n\t} else if (type=='comic') {\n\tsyms = '漫画模式'\n\t} else {\n\tsyms = '小说模式'\n\t}\ntry {\n\tlet tone_id = source.getLoginInfoMap()['听书Ai音色填写详情页序号'];\n  if (tone_id!='') {\n  \ttone = String(tone_id)\n  \t}\n} catch (e) {}\n\t if (t=='tone_id') {\n\t \t  java.toast('当前音色为：' + tone)\n\t \t} else if (t== 'type') {\n\t \t\tjava.toast('当前模式为：'+syms )\n\t \t\t}\n\t}\n\t\n\t\nvar typeMap = {\n    '小说': 'novel',\n    '漫画': 'comic',\n    '听书': 'audio',\n    '短剧': 'video'\n};\n\nfunction configs(btnText) {\n    var type = typeMap[btnText];\n    setArguments('type',type);\n    java.toast('已切换至' + btnText)\n}\n\nvar toneList = [\n  [\"多人对话\", \"51\"],\n  [\"真人发音\", \"0\"],\n  [\"甜美少女\", \"1\"],\n  [\"清亮青叔\", \"2\"],\n  [\"成熟大叔\", \"4\"],\n  [\"开朗青年\", \"5\"],\n  [\"温柔淑女\", \"6\"],\n  [\"风雅青叔\", \"8\"],\n  [\"清纯少女\", \"12\"],\n  [\"磁性青叔\", \"17\"],\n  [\"儒雅大叔\", \"29\"],\n  [\"优雅御姐\", \"30\"],\n  [\"斯文青叔\", \"31\"],\n  [\"知性主播\", \"32\"],\n  [\"成熟升级\", \"74\"],\n  [\"多人升级\", \"80\"],\n  [\"俏皮御姐\", \"100\"],\n  [\"双音灵动\", \"103\"]\n]\n\nfunction setTone(index) {\n  let tone = toneList[index - 1][1]\n  setArguments('tone_id', String(tone))\n  let toneName = toneList[index - 1][0]\n  if (source.getLoginInfoMap()['听书Ai音色填写详情页序号'] !='') {\n  \tjava.longToast(`\\n❌️请先清空自定义音色\\n自定义音色值：${source.getLoginInfoMap()['听书Ai音色填写详情页序号']}`)\n  \t} else {\n  \t\tjava.longToast(`\\n✅听书发音已切换为：${toneName}\\n音色值：${tone}`)\n  \t\t}\n  }",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "author",
      "coverUrl": "thumb_url",
      "init": "data.data",
      "intro": "&nbsp;&nbsp;\n🆔 书号：{{$.book_id}}\n📕 源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🕰️ 更新：{{String(java.timeFormatUTC(java.getString('$..last_chapter_update_time')*1000,'yyyy-MM-dd HH:mm:ss',8)).replace(/.*1970\\-.*/,'')}}\n🏷️ 标签：{{$.tags}}\n👤 主角：{{$.roles##\\[|\\\"|\\]}}\n⚙️  当前模式：syms\n🗣 当前音色：ystone\n🔊 可选音色：{{$.tones}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n书籍状态：__status__\n@js:\nlet tone = getArguments('tone_id');\nlet type = getArguments('type');\nlet syms = '小说';\nif (type=='video') {\n\tsyms = '短剧模式'\n\t} else if (type=='audio') {\n\tsyms = '听书模式'\n\t} else if (type=='comic') {\n\tsyms = '漫画模式'\n\t} else {\n\tsyms = '小说模式'\n\t}\ntry {\n\tlet tone_id = source.getLoginInfoMap()['听书Ai音色填写详情页序号'];\n  if (tone_id!='') {\n  \ttone = String(tone_id)\n  \t}\n} catch (e) {}\nresult.replace(/.+：(人在读)?\\n/g,\"\").replace('ystone',tone).replace('syms',syms).replace('__status__', (java.getString('$.book_search_visible') == 'true' ? '正常' : (java.getString('$.tomato_book_status') == '3' ? '下架' : '小黑屋')));",
      "kind": "{{java.getString(\"gender\")==1?\"男生\":\"女生\"}}\n{{$.category}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}\n{{$.sub_info}}\n@js:result.replace(\"连载0\",\"\").replace(\"1完结\",\"\").replace(\"连载4完结\",\"断更\")",
      "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}",
      "name": "book_name",
      "tocUrl": "$.book_id\n<js>\njava.put('bookid',result);\nurl = `${source.key}/api/book?book_id=${result}`\n</js>",
      "wordCount": "word_number"
    },
    "ruleContent": {
      "content": "<js>\nvar id = java.hexDecodeToString(result);\nvar type = getArguments('type');\nlet tone = getArguments('tone_id');\njava.log(tone)\ntry {\n\tlet tone_id = source.getLoginInfoMap()['听书Ai音色填写详情页序号'];\n  if (tone_id!='') {\n  \ttone = String(tone_id)\n  \t}\n} catch (e) {}\n\nlet url = source.key + \"/api/content?item_id=\" + id;\nif (type == 'comic') {\n\t  let result = java.ajax(url+\"&tab=漫画\");\n\t  result=JSON.parse(result).data.images;\n  } else if (type == 'audio') {\n\tlet urls = url +\"&tab=听书\" + \"&tone_id=\" + tone;\n\tjava.log(urls);\n  let result = java.ajax(urls);\n  result=JSON.parse(result).data.content;\n} else if (type == 'video') {\n\t//let urls = url +\"&tab=短剧\";\n  //let result = java.ajax(urls);\n  //result=JSON.parse(result).data.video_url;\n\n  if (book['durChapterIndex'] == chapter['index']) {\n   \tlet bookid = java.get('bookid');  \t \n  \tlet vurl = source.key+\"/video?book_id=\"+bookid;\n    java.startBrowser(vurl, '短剧播放器') ;   \n    java.toast('\\n✅正在加载视频，请耐心等待');\n  }\n  `【刷新正文】播放视频\\n`\n  } else {\n  let result = java.ajax(url+\"&tab=小说\");\n  result=JSON.parse(result).data.content;\n  \t}\n</js>",
      "imageStyle": "FULL"
    },
    "ruleExplore": {
      "author": "$.author||$.copyright",
      "bookList": "<js>\n\nlet ck = \"sessionid=\" + (String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) ? String(cookie.getKey(\"fanqienovel.com\", \"sessionid\")) : (source.getLoginInfoMap() || {})['手动登录Token'])\n\ngetShelf = () => {\nlet book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\nlet book_shelf_info = java.ajax(book_shelf_url + ', ' + JSON.stringify({\n  headers: {\n    'Cookie': ck\n  }\n}))\n\nbid = getBookIdFull(book_shelf_info)\nlet id_list = splitArray(bid, 100)\nlet urls = []\nid_list.forEach(i => {\n    urls.push(xGorgon(\"multi-detail\", \"book_id=\" + i.join(\",\"), null, ck))\n})\n\nres = java.ajaxAll(urls)\n\nlet resp = {book_info: []}\nres.forEach(r => {\n  resp.book_info = resp.book_info.concat(JSON.parse(r.body()).data)\n})\n\nreturn resp\n}\n\nfunction getByGroupName(name) {\n  let book_shelf_url = 'https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=57700&update_version_code=57700'\n\n  let book_shelf_info = JSON.parse(java.ajax(book_shelf_url + ', ' + JSON.stringify({\n    headers: {\n      'Cookie': ck,\n    }\n  })))\n  let group_bookids = {\n    \"未分组\": []\n  }\n  // java.log(\n  book_shelf_info.data.book_shelf_info.forEach(i => {\n    if (!group_bookids[i.group_name ? i.group_name : \"未分组\"]) group_bookids[i.group_name] = []\n    group_bookids[i.group_name ? i.group_name : \"未分组\"].push(i.book_id)\n  })\n  // java.log(JSON.stringify(group_bookids[\"未分组\"]))\n  // java.log(decodeURIComponent(name))\n  if (!group_bookids[decodeURIComponent(name)]) return {data: []}\n  //java.log(\"awa\")\n  let book_ids = splitArray(group_bookids[decodeURIComponent(name)], 100)\n  let urls = []\n\n  book_ids.forEach(i => {\n    urls.push(xGorgon(\"multi-detail\", \"book_id=\" + i.join(\",\"), null, ck))\n  })\n  \n  res = java.ajaxAll(urls)\n\n  let resp = {book_info: []}\n  res.forEach(r => {\n    resp.book_info = resp.book_info.concat(JSON.parse(r.body()).data)\n  })\n\n  return resp\n}\n\nfunction getByTabIndex(index) {\n  let url = xGorgon(\n\t  \"bookmall/tab\",\n    \"version_name=5.8.9.32&device_id=1024&device_type=114514&iid=2048\",\n\t  null,\n\t  ck\n  )\n  let all = JSON.parse(java.ajax(url))\n  let tab = all.data.tab_item[0].cell_data[index]\n  // java.log(JSON.stringify(tab))\n  tab = tab.cell_data\n  if (!tab) tab = []\n  let bookList = []\n  for (let i of tab) {\n    bookList = bookList.concat(i.book_data)\n    // java.log(JSON.stringify(i.book_data))\n  }\n  return { book_info: bookList }\n}\n\nif (baseUrl.endsWith(\"bookshelf\")) result = getShelf(\"bookshelf/info\")\nelse {\n  let w = baseUrl.split(\"/\")\n  if (baseUrl.includes(\"groupName\")) {\n    result = getByGroupName(w[w.length - 1])\n  } else if (baseUrl.includes(\"tab\")) {\n    result = getByTabIndex(parseInt(w[w.length - 1]))\n  } else result = JSON.parse(result)\n}\nJSON.stringify({data: result.book_info || result.data.book_info || result.detail_list || result.data.video_info || result.data})\n</js>\n$.data[*]",
      "bookUrl": "<js>\ntp = source.get('tp')\n//java.log(tp)\nif (String(tp) == ''||tp == '6'){\n\tsource.put('type','video')\n\t}else if (tp == '5'){\n\t\tsource.put('type','comic')\n\t\t}else if (tp == '3'){\n\t\t\tsource.put('type','audio')\n\t\t\t}else {\n\t\t\t\tsource.put('type','novel')\n\t\t\t\t}\n\t\t\tresult\n</js>\n{{source.key}}/api/detail?book_id={{$.book_id||$.bookId||$.series_id}}",
      "coverUrl": "$.thumb_url||$.cover\n@js:replaceCover(result)",
      "intro": "$.abstract||$.video_desc##\\n",
      "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\")*1000,'yyyy-MM-dd',8)}}\n##连载0|1完结\n@js:result\n.replace(/男生.女生/, String(java.getString(\"$.isbn\")) ? \"出版\" : `男生${java.getString(\"$.gender\")}女生`)\n.replace(\"男生0\", \"\")\n.replace(\"1女生\", \"\")\n.replace(\"男生2女生\", \"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\")\n.replace(\"1970-01-01\", \"\");",
      "name": "$.book_name||$.title",
      "wordCount": "$.word_number"
    },
    "ruleSearch": {
      "author": "author||$..copyright##</?em>",
      "bookList": ".book_data[*]||.video_data[*]",
      "bookUrl": "{{source.key}}/api/detail?book_id={{$.book_id||$.series_id}}",
      "coverUrl": "thumb_url||cover",
      "intro": "abstract||$..series_intro",
      "kind": "{{java.getString(\"gender\")==1?\"男生\":\"女生\"}}\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n@js:result.replace(\"连载0\",\"\").replace(\"1完结\",\"\").replace(\"连载4完结\",\"断更\")",
      "lastChapter": "连载{{$.creation_status}}完结##连载0|1完结",
      "name": "book_name||$..series_title##<em>|</em>|《|》",
      "wordCount": "word_number"
    },
    "ruleToc": {
      "chapterList": "data.data.chapterListWithVolume[*].[*]",
      "chapterName": "title",
      "chapterUrl": "itemId\n<js>\nvar type = getArguments('type');\nif (type == 'comic') {\n  book.type = 64\n} else if (type == 'audio') {\n  book.type = 32\n} else {\n  book.type = 8\n}\nresult = `data:;base64,${java.base64Encode(result)},{\"type\":\"${type}\"}`\n</js>",
      "updateTime": "{{java.timeFormatUTC(java.getString(\"firstPassTime\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (result.startsWith(\" |\")) result = result.slice(2)\nif (result.startsWith(\"| \")) result = result.slice(2)\nresult"
    },
    "searchUrl": "@js:\nvar tab;\ntype = getArguments('type');\nvar processedType = String(type).replace(/^\\s+|\\s+$/g, '').toLowerCase();\nif (!type || type == \"undefined\") {\n    tab = 3;\n} else {\n    switch(processedType) {\n        case 'novel':\n            tab = 3;\n            break;\n        case 'audio':\n            tab = 2;\n            break;\n        case 'comic':\n            tab = 8;\n            break;\n        case 'video':\n            tab = 11;\n            break;\n        default:\n            tab = 3;\n            break;\n    }\n}\nif (String(key).startsWith(\"m:\") || String(key).startsWith(\"m：\")) {\n    tab = 8\n    setArguments('type','comic')\n    key = key.slice(2)\n}\nif (String(key).startsWith(\"t:\") || String(key).startsWith(\"t：\")) {\n    tab = 2\n    setArguments('type','audio')\n    key = key.slice(2)\n}\nif (String(key).startsWith(\"d:\") || String(key).startsWith(\"d：\")) {\n    tab = 11\n    setArguments('type','video')\n    key = key.slice(2)\n}\nif (String(key).startsWith(\"x:\") || String(key).startsWith(\"x：\")) {\n    tab = 3\n    setArguments('type','novel')\n    key = key.slice(2)\n}\nif (key.length == 19 && !Number.isNaN(parseInt(key))) {\n    result = source.key + '/api/detail?book_id=' + key\n} else {\n    result = source.key + '/api/search?key=' + encodeURI(java.put(\"key\", key)) + '&offset=' + ((java.put(\"page\", page) - 1) * 10) + '&tab_type=' + tab\n}",
    "weight": 0
  }
]